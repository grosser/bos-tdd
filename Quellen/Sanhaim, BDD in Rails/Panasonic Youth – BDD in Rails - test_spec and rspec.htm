<!DOCTYPE HTML PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"><head profile="http://gmpg.org/xfn/11">



<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<title>Panasonic Youth –   BDD in Rails - test/spec and rspec</title>
<meta name="generator" content="WordPress 2.6.3"> <!-- leave this for stats -->
<link rel="stylesheet" href="Panasonic%20Youth%20%E2%80%93%20BDD%20in%20Rails%20-%20test_spec%20and%20rspec_files/style.css" type="text/css" media="screen">
<link rel="alternate" type="application/rss+xml" title="Panasonic Youth RSS Feed" href="http://robsanheim.com/feed/">
<link rel="pingback" href="http://robsanheim.com/xmlrpc.php">
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://robsanheim.com/xmlrpc.php?rsd">
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://robsanheim.com/wp-includes/wlwmanifest.xml"> 
<meta name="generator" content="WordPress 2.6.3">

<link rel="stylesheet" href="Panasonic%20Youth%20%E2%80%93%20BDD%20in%20Rails%20-%20test_spec%20and%20rspec_files/syntax_hilite_css.css" type="text/css" media="all">
	<script language="javascript" type="text/javascript" src="Panasonic%20Youth%20%E2%80%93%20BDD%20in%20Rails%20-%20test_spec%20and%20rspec_files/syntax_hilite_js.js"></script>
	<script language="javascript" type="text/javascript">
	var arrCode = new Array();
	</script>
<!-- google stuff here -->
  <script src="Panasonic%20Youth%20%E2%80%93%20BDD%20in%20Rails%20-%20test_spec%20and%20rspec_files/urchin.js" type="text/javascript"></script>
  <script type="text/javascript">
    _uacct = "UA-133522-1";
    urchinTracker();
  </script>
</head><body>
<div class="container">
	<div class="header">
        <div class="search">
            <form method="get" id="sform" action="http://robsanheim.com/">
                <input id="q" value="" name="s" size="15" type="text">
			</form>
        </div><!-- end search -->
		        <h1><a href="http://robsanheim.com/">Panasonic Youth</a> 
		<span>rob sanheim writes about software, business, ruby, music, stuff and things</span></h1>
	</div><!-- end header -->


<div class="blogads">
	
	<script type="text/javascript"><!--
	google_ad_client = "pub-7732216366632885";
	google_ad_width = 160;
	google_ad_height = 600;
	google_ad_format = "160x600_as";
	google_ad_type = "text";
	//2007-07-13: sidebar
	google_ad_channel = "4389544108";
	google_color_border = "CCCCCC";
	google_color_bg = "FFFFFE";
	google_color_link = "000000";
	google_color_text = "333333";
	google_color_url = "666666";
	google_ui_features = "rc:0";
	//-->
	</script>
	<script style="display: none;" type="text/javascript" src="Panasonic%20Youth%20%E2%80%93%20BDD%20in%20Rails%20-%20test_spec%20and%20rspec_files/show_ads.js">
	</script>

	<br>
	<br>

	</div>


    						
      <div class="post">
          <div class="metainfo">
              <p>Posted<br>
                29 December 2006 @ 4am</p>
                <p>Tagged<br>
                <a href="http://robsanheim.com/category/software/agile/" title="View all posts in Agile" rel="category tag">Agile</a>,  <a href="http://robsanheim.com/category/software/bdd/" title="View all posts in BDD" rel="category tag">BDD</a>,  <a href="http://robsanheim.com/category/software/ruby/rails/" title="View all posts in Rails" rel="category tag">Rails</a>,  <a href="http://robsanheim.com/category/software/ruby/" title="View all posts in Ruby" rel="category tag">Ruby</a></p>
                <p><a href="#comments">Discuss</a></p>
		    </div>
		    <div class="content">
		        <h3>BDD in Rails - test/spec and rspec 
		        </h3>
		        <p><img src="Panasonic%20Youth%20%E2%80%93%20BDD%20in%20Rails%20-%20test_spec%20and%20rspec_files/bdd_survival.jpg" alt="bdd survival"></p>
<p>I've been playing a bit with <a href="http://chneukirchen.org/blog/archive/2006/10/announcing-test-spec-0-2-a-bdd-interface-for-test-unit.html">test/spec</a>
lately in attempts to start doing more BDD. I've been following RSpec,
the better known Ruby BDD library for awhile, but decided against it
since it just doesn't look practical for use in an established project
with around ~400 test cases. It also seems that development is very
active to keep up with edge rails, but ultimately a sure path to
frustration as little changes in edge break the rspec plugin where they
dealing with Rails internals. There just isn't time to convert old
style test cases to rspec, and there isn't time to track down bugs due
to conflicts between rspec, the rspec rails plugin, and bleeding edge
Rails. Also, why didn't Rspec just use <a href="http://mocha.rubyforge.org/">Mocha/Stubba</a> -- whats up with that?</p>
<p>So back to test/spec. Test/spec is small interface that sits on top
of test/unit and adds "specify", "context", and "should" that just work
inside normal test cases. So most of the specs I've written looked very
similiar to rspec, except that they can freely mixed with legacy test
cases without issue. Using the "context/specify" block format for
specifications does break textmate integration for running specific
test cases, and also trips up autotest a little bit, but those issues
could probably be fixed easily. Test/spec doesn't attempt to tie into
Rails at all, so you don't get nice Rails specific should assertions,
but they are <a href="http://weblog.techno-weenie.net/2006/11/24/test-spec-kicks-simply_bdds-ass">easy enough</a> to add.  Plus you don't have to worry about test/spec breaking when Rails 2.0 deprecates your favorite assertions.</p>
<p>I did have a minor annoyance where I had to declare fixtures (or
other class level stuff) both in the normal top level and inside
context blocks if mixing test cases and specs. Example:</p>
<div class="igBar"><span id="lruby-1"><a href="#" onclick="javascript:showCodeTxt('ruby-1'); return false;">PLAIN TEXT</a></span></div>
<div class="syntax_hilite"><span class="langName">RUBY:</span>
<div id="ruby-1">
<div class="ruby">
<ol>
<li style="font-family: 'Courier New',Courier,monospace; font-weight: normal; font-style: normal; color: rgb(58, 106, 139);">
<div style="font-family: 'Courier New',Courier,monospace; font-weight: normal;"><span style="color: rgb(153, 102, 204); font-weight: bold;">class</span> SearchControllerTest &lt;Test::Unit::TestCase</div>
</li>
<li style="font-weight: bold; color: rgb(38, 83, 106);">
<div style="font-family: 'Courier New',Courier,monospace; font-weight: normal;">&nbsp; fixtures :users&nbsp; <span style="color: rgb(0, 128, 0); font-style: italic;"># fixture here </span></div>
</li>
<li style="font-family: 'Courier New',Courier,monospace; font-weight: normal; font-style: normal; color: rgb(58, 106, 139);">
<div style="font-family: 'Courier New',Courier,monospace; font-weight: normal;">&nbsp;</div>
</li>
<li style="font-weight: bold; color: rgb(38, 83, 106);">
<div style="font-family: 'Courier New',Courier,monospace; font-weight: normal;">&nbsp; context <span style="color: rgb(153, 102, 0);">"routing"</span> <span style="color: rgb(153, 102, 204); font-weight: bold;">do</span> </div>
</li>
<li style="font-family: 'Courier New',Courier,monospace; font-weight: normal; font-style: normal; color: rgb(58, 106, 139);">
<div style="font-family: 'Courier New',Courier,monospace; font-weight: normal;">&nbsp; &nbsp; fixtures :users <span style="color: rgb(0, 128, 0); font-style: italic;"># and here</span></div>
</li>
<li style="font-weight: bold; color: rgb(38, 83, 106);">
<div style="font-family: 'Courier New',Courier,monospace; font-weight: normal;">&nbsp; &nbsp; </div>
</li>
<li style="font-family: 'Courier New',Courier,monospace; font-weight: normal; font-style: normal; color: rgb(58, 106, 139);">
<div style="font-family: 'Courier New',Courier,monospace; font-weight: normal;">&nbsp; &nbsp; specify <span style="color: rgb(153, 102, 0);">"i am the walrus"</span> <span style="color: rgb(153, 102, 204); font-weight: bold;">do</span></div>
</li>
<li style="font-weight: bold; color: rgb(38, 83, 106);">
<div style="font-family: 'Courier New',Courier,monospace; font-weight: normal;">&nbsp; &nbsp; <span style="color: rgb(153, 102, 204); font-weight: bold;">end</span></div>
</li>
<li style="font-family: 'Courier New',Courier,monospace; font-weight: normal; font-style: normal; color: rgb(58, 106, 139);">
<div style="font-family: 'Courier New',Courier,monospace; font-weight: normal;">&nbsp; <span style="color: rgb(153, 102, 204); font-weight: bold;">end</span></div>
</li>
<li style="font-weight: bold; color: rgb(38, 83, 106);">
<div style="font-family: 'Courier New',Courier,monospace; font-weight: normal;">&nbsp; </div>
</li>
<li style="font-family: 'Courier New',Courier,monospace; font-weight: normal; font-style: normal; color: rgb(58, 106, 139);">
<div style="font-family: 'Courier New',Courier,monospace; font-weight: normal;">&nbsp; <span style="color: rgb(153, 102, 204); font-weight: bold;">def</span> test_should_go_to_bed_earlier</div>
</li>
<li style="font-weight: bold; color: rgb(38, 83, 106);">
<div style="font-family: 'Courier New',Courier,monospace; font-weight: normal;">&nbsp; &nbsp; my.<span style="color: rgb(153, 0, 204);">bedtime</span>.<span style="color: rgb(153, 0, 204);">should</span>.<span style="color: rgb(153, 0, 204);">be</span>.<span style="color: rgb(153, 0, 204);">before</span>.<span style="color: rgb(128, 0, 0);">2</span>.<span style="color: rgb(153, 0, 204);">am</span></div>
</li>
<li style="font-family: 'Courier New',Courier,monospace; font-weight: normal; font-style: normal; color: rgb(58, 106, 139);">
<div style="font-family: 'Courier New',Courier,monospace; font-weight: normal;">&nbsp; <span style="color: rgb(153, 102, 204); font-weight: bold;">end</span> </div>
</li>
</ol>
</div>
</div>
</div>
<p></p>
<p>Again, a minor thing, and I'm sure there is ruby magic that could be used to get around it.  </p>
<p>Overall, I do find the specs read easier, which I think is the main
thing and what really makes any of this stuff worth doing. Once you
start saying "test_should" instead of "test_blah" you are already 80%
of the way there in your head, so its really just a matter of getting
the specs to read well. Lately I've just been using
"foo.should.not.be.nil" inside normal test cases, so I can use the
tools I like and still think "should" instead of "assert". I really
dislike the.dot.notation and plan on hacking it to allow underscores,
or maybe strings like Rick is doing.</p>
<p>So, yay on test/spec and doing BDD with less code, even for "legacy"
Rails projects with a lot of test cases. Hopefully rspec will really be
ready for Rails production work after 1.2 comes out and things settle
down. For now, test/spec + mocha/stubba it is.</p>
		        <br clear="left">
		    </div>
        </div><!-- end post -->

				<div id="bottom_link_units">
						<script type="text/javascript"><!--
	google_ad_client = "pub-7732216366632885";
	google_ad_width = 468;
	google_ad_height = 15;
	google_ad_format = "468x15_0ads_al";
	//2007-07-31: link units
	google_ad_channel = "8540124464";
	google_color_border = "CCCCCC";
	google_color_bg = "FFFFFF";
	google_color_link = "000000";
	google_color_text = "333333";
	google_color_url = "666666";
	//-->
	</script>
	<script style="display: none;" type="text/javascript" src="Panasonic%20Youth%20%E2%80%93%20BDD%20in%20Rails%20-%20test_spec%20and%20rspec_files/show_ads.js">
	</script>				</div>

			
<!-- You can start editing here. -->


<div id="comments" class="post">

	<h3 class="comments_headers">6 Comments</h3>

</div>
	
	
			
        <div class="post">
		    <div class="metainfo">
				<p>Posted by<br><a href="http://addictedtonew.com/" rel="external nofollow">John Nunemaker</a><br>
				29 December 2006 @ 8am</p>
			</div>
			<div class="content">
				<p>You don’t even need the outside class SearchControllerTest</p>
 
							</div>
		<br clear="left">
		</div>
			
        <div class="post">
		    <div class="metainfo">
				<p>Posted by<br><a href="http://www.robsanheim.com/" rel="external nofollow">Rob</a><br>
				29 December 2006 @ 4pm</p>
			</div>
			<div class="content">
				<p>Hmm…I
know thats true, but I think removing that would totally break the
mapping that autotest does. I”ll give it a try, though.</p>
 
							</div>
		<br clear="left">
		</div>
			
        <div class="post">
		    <div class="metainfo">
				<p>Posted by<br><a href="http://addictedtonew.com/" rel="external nofollow">John Nunemaker</a><br>
				29 December 2006 @ 4pm</p>
			</div>
			<div class="content">
				<p>I’m
actually using it with autotest and haven’t noticed any problems. But
I’m not trying to do anything fancy. Maybe you are. Not sure what the
mapping your are talking about is.</p>
 
							</div>
		<br clear="left">
		</div>
			
        <div class="post">
		    <div class="metainfo">
				<p>Posted by<br><a href="http://www.willjessup.com/?p=48" rel="external nofollow">Testing (TDD/BDD,etc.) Link Roundup at Drinking Rockstars and Programming</a><br>
				1 February 2007 @ 1am</p>
			</div>
			<div class="content">
				<p>[...] <a href="http://www.robsanheim.com/2006/12/29/bdd-in-rails-testspec-and-rspec/" rel="nofollow">http://www.robsanheim.com/2006/12/29/bdd-in-rails-testspec-and-rspec/</a> [...]</p>
 
							</div>
		<br clear="left">
		</div>
			
        <div class="post">
		    <div class="metainfo">
				<p>Posted by<br><a href="http://blog.davidchelimsky.net/articles/2007/03/01/spec-expectations-and-test-unit-testcase-together-again-at-last" rel="external nofollow">Spec::Expectations and Test::Unit::TestCase, together again at last</a><br>
				1 March 2007 @ 8am</p>
			</div>
			<div class="content">
				<p>[...]
In Rob Sanheim’s blog on comparing test/spec w/ rspec, Rob pointed out
that he had “been following RSpec, the better known Ruby BDD library
for awhile, but decided against it since it just doesn’t look practical
for use in an established project with around ~400 test cases.” [...]</p>
 
							</div>
		<br clear="left">
		</div>
			
        <div class="post">
		    <div class="metainfo">
				<p>Posted by<br><a href="http://blog.davidchelimsky.net/" rel="external nofollow">David Chelimsky</a><br>
				1 March 2007 @ 8am</p>
			</div>
			<div class="content">
				<p>“Also, why didn’t Rspec just use Mocha/Stubba — whats up with that?”</p>
<p>When RSpec’s mock framework was originally written, mocha/stubba was
far less mature than it is now. Things are obviously different now, and
we do plan to provide a means of choosing RSpec’s mock framework or any
other framework you wish to use, provided that framework has decoupled
itself sufficiently from test/unit, which is true of mocha/stubba.</p>
<p>“I really dislike the.dot.notation and plan on hacking it to allow underscores, or maybe strings like Rick is doing.”</p>
<p>Two things here - 0.8 uses expression matchers that look like this:</p>
<p>board.should have_at_least(3).pieces</p>
<p>You can now use these right in your test/unit test cases:</p>
<p><a href="http://blog.davidchelimsky.net/articles/2007/03/01/spec-expectations-and-test-unit-testcase-together-again-at-last" rel="nofollow">http://blog.davidchelimsky.net/articles/2007/03/01/spec-expectations-and-test-unit-testcase-together-again-at-last</a></p>
<p>As for Rails, the 0.8 release of Spec::Rails has much better Rails
integration than before. You have access to all of the rails assertions
(the contexts derive from Test::Unit::TestCase) plus a number of
rspec-style expectations.</p>
<p>It is always tested against 1.1.6, 1.2.1 and 1.2.2. We also run
tests against edge, but we do not let failures there prevent us from
doing releases. That’s more for us to keep abreast of what issues lie
in store when the next Rails version is released.</p>
<p>So give it a try! And please report on your experience, good or bad. It can only help improve things for the future.</p>
<p>Cheers,<br>
David</p>
 
							</div>
		<br clear="left">
		</div>
		
	

	<!-- Comment Form -->

<div class="postnoline">

    <div class="content">

		
		
			<h3 id="respond" class="comments_headers">Leave a Comment</h3>
			<form action="http://robsanheim.com/wp-comments-post.php" method="post" id="comment_form">
			
										<p><input class="text_input" name="author" id="author" value="" tabindex="1" type="text"><label for="author"><strong> Name</strong></label></p>
				<p><input class="text_input" name="email" id="email" value="" tabindex="2" type="text"><label for="email"><strong> Email</strong></label></p>
				<p><input class="text_input" name="url" id="url" value="" tabindex="3" type="text"><label for="url"><strong> Website</strong></label></p>
							<!--<p><small><strong>XHTML:</strong> You can use these tags: &lt;a href=&quot;&quot; title=&quot;&quot;&gt; &lt;abbr title=&quot;&quot;&gt; &lt;acronym title=&quot;&quot;&gt; &lt;b&gt; &lt;blockquote cite=&quot;&quot;&gt; &lt;cite&gt; &lt;code&gt; &lt;del datetime=&quot;&quot;&gt; &lt;em&gt; &lt;i&gt; &lt;q cite=&quot;&quot;&gt; &lt;strike&gt; &lt;strong&gt; </small></p>-->
			
				<p><textarea class="text_input text_area" name="comment" id="comment" cols="7" rows="7" tabindex="4"></textarea></p>
			
							
				<p>
					<input name="submit" class="form_submit" id="submit" src="Panasonic%20Youth%20%E2%80%93%20BDD%20in%20Rails%20-%20test_spec%20and%20rspec_files/submit_comment.htm" tabindex="5" value="Submit" type="submit">
					<input name="comment_post_ID" value="295" type="hidden">
				</p>
		
					
			</form>

		
    </div>

</div>
    

			
				
<div class="posttopline">
	<span class="previous">← <a href="http://robsanheim.com/2006/12/20/contegix-is-amazing-plus-thoughts-on-rails-hosting/">Contegix is Amazing.  Plus Thoughts on Rails Hosting</a></span>
	<span class="next"><a href="http://robsanheim.com/2007/01/09/one-either-blogs-or-one-works/">One either blogs or one works</a> →</span>
</div>

<br clear="all">

    <div class="footer">
		
		    <div>
    			<p><strong>About</strong></p>
    			<p>Rob Sanheim lives, loves, and writes code.  This is a place where he writes about technology, business, and the world.</p>
    			<p>You can have me <a href="http://robsanheim.com/speaking" title="Presentations I've done and can do for">come speak</a> at your organization.</p>
		    </div>
	
		    <div>
    			<p><strong>Buy the Book</strong></p>

<p><a href="http://www.amazon.com/gp/product/0596523696?ie=UTF8&amp;tag=panasonicyout-20&amp;linkCode=as2&amp;camp=1789&amp;creative=9325&amp;creativeASIN=0596523696"><img src="Panasonic%20Youth%20%E2%80%93%20BDD%20in%20Rails%20-%20test_spec%20and%20rspec_files/21CY79WRGFL.htm" border="0"></a></p><p><a href="http://www.amazon.com/gp/product/0596523696?ie=UTF8&amp;tag=panasonicyout-20&amp;linkCode=as2&amp;camp=1789&amp;creative=9325&amp;creativeASIN=0596523696">The Ruby Cookbook</a><br>900 pages of pure Ruby goodness.<img src="Panasonic%20Youth%20%E2%80%93%20BDD%20in%20Rails%20-%20test_spec%20and%20rspec_files/ir.gif" alt="" style="border: medium none  ! important; margin: 0px ! important;" border="0" width="1" height="1"></p>

		    </div>
	
		    <div>
    			<p><strong>What do you know of fire? You prance around like you have laser eyes. You don't!</strong></p>


		    </div>
	
		    <div>
    			<p><strong>Recent Archives</strong></p>
    			
    			<ul class="nav">	<li><a href="http://robsanheim.com/2009/02/" title="February 2009">February 2009</a></li>
	<li><a href="http://robsanheim.com/2009/01/" title="January 2009">January 2009</a></li>
	<li><a href="http://robsanheim.com/2008/11/" title="November 2008">November 2008</a></li>
	<li><a href="http://robsanheim.com/2008/09/" title="September 2008">September 2008</a></li>
	<li><a href="http://robsanheim.com/2008/07/" title="July 2008">July 2008</a></li>
	<li><a href="http://robsanheim.com/2008/06/" title="June 2008">June 2008</a></li>
	<li><a href="http://robsanheim.com/2008/05/" title="May 2008">May 2008</a></li>
</ul>

    			<p><a href="http://robsanheim.com/archives/">View All Archives</a></p>
		    </div>
	
		    <div class="last">
    			<p><strong>Contact</strong></p>
    			<p>first initial + last name @ gmail.com</p>
					<p>I have a <a href="http://robsanheim.com/resume/">resume</a> which shows my propensity to rock, sometimes I do the <a href="http://twitter.com/rsanheim">Twitter</a> thing, and I also <a href="http://303.tumblr.com/">tumble</a>.
					</p>

		    </div>
	
	    </div><!-- end footer -->

        <br clear="all">
        
		<div class="copyright">
        	        	<span class="previous">← <a href="http://robsanheim.com/">Back to Home</a></span>
                        <p>© Panasonic Youth. Powered by <a href="http://wordpress.org/">WordPress</a> using the <a href="http://powazek.com/posts/516">DePo Clean Theme</a>.</p>
            		</div>

	</div> <!-- end container -->
</body></html>